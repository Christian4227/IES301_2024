version: "3"

volumes:
    postgres-data:


services:
    frontend:
        container_name: front_tickets_container
        build: .
        ports:
            - "3000:3000"
        working_dir: '/app/ticketeasypro/src'
        depends_on:
            - backend
        networks:
            - ticketeasypro-network
    backend:
        container_name: back_tickets_container
        build: ./api
        ports:
            - "3210:3210"
        working_dir: '/app/ticketeasypro/api'
        env_file:
            - ./api/.env.production
        depends_on:
            - postgres
        networks:
            - ticketeasypro-network
    postgres:
        image: postgres:latest
        restart: always
        container_name: db_tickets_container
        environment:
            POSTGRES_DB: db_tickets
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: 1234
        ports:
            - "5432:5432"
        expose:
            - 5432
        networks:
            - ticketeasypro-network
        volumes:
            - postgres-data:/var/lib/postgresql/data
networks:
    ticketeasypro-network:
